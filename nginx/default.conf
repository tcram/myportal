upstream django_app {
    server django_myportal:8000;
}

server {
    listen 80;
    server_name example.com;

    location / {
        proxy_pass http://django_app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /static/ {
        alias /app/static/;  # Adjust this path to your static files location
    }
}
# This configuration sets up Nginx to reverse proxy requests to a Django application
# running in a Docker container named 'django_myportal' on port 8000.
# It listens on port 80 and forwards requests to the Django app while preserving
# the original request headers.
# Make sure to replace 'example.com' with your actual domain name.
# Save this file as 'default.conf' in the 'nginx' directory of your Docker setup.
# Ensure that the Nginx service is properly linked to the Django service in your Docker
# Compose file or Docker network.
# This configuration is suitable for production environments where you want to serve
# a Django application behind Nginx for better performance and security.
# You can further customize this configuration by adding SSL support or additional
# location blocks as needed.